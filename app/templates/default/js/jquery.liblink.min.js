!function(t){"use strict";function i(i){return i instanceof t||t.zepto&&t.zepto.isZ(i)}function e(i,e){return"string"==typeof i&&0===i.indexOf("-inline-")?(this.method=e||"html",this.target=this.el=t(i.replace("-inline-","")||"<div/>"),!0):void 0}function n(i){if("string"==typeof i&&0!==i.indexOf("-")){this.method="val";var e=document.createElement("input");return e.name=i,e.type="hidden",this.target=this.el=t(e),!0}}function s(t){return"function"==typeof t?(this.target=!1,this.method=t,!0):void 0}function r(t,e){return i(t)&&!e?(t.is("input, select, textarea")?(this.method="val",this.target=t.on("change.liblink",this.changeHandler)):(this.target=t,this.method="html"),!0):void 0}function h(t,e){return i(t)&&("function"==typeof e||"string"==typeof e&&t[e])?(this.method=e,this.target=t,!0):void 0}function o(i,e,n){var s=this,r=!1;if(this.changeHandler=function(i){var e=s.formatInstance.from(t(this).val());return e===!1||isNaN(e)?(t(this).val(s.lastSetValue),!1):void s.changeHandlerMethod.call("",i,e)},this.el=!1,this.formatInstance=n,t.each(f,function(t,n){return r=n.call(s,i,e),!r}),!r)throw new RangeError("(Link) Invalid Link.")}function a(t){this.items=[],this.elements=[],this.origin=t}function l(i,e,n,s){0===i&&(i=this.LinkDefaultFlag),this.linkAPI||(this.linkAPI={}),this.linkAPI[i]||(this.linkAPI[i]=new a(this));var r=new o(e,n,s||this.LinkDefaultFormatter);r.target||(r.target=t(this)),r.changeHandlerMethod=this.LinkConfirm(i,r.el),this.linkAPI[i].push(r,r.el),this.LinkUpdate(i)}var f=[e,n,s,r,h];o.prototype.set=function(t){var i=Array.prototype.slice.call(arguments),e=i.slice(1);this.lastSetValue=this.formatInstance.to(t),e.unshift(this.lastSetValue),("function"==typeof this.method?this.method:this.target[this.method]).apply(this.target,e)},a.prototype.push=function(t,i){this.items.push(t),i&&this.elements.push(i)},a.prototype.reconfirm=function(t){var i;for(i=0;i<this.elements.length;i+=1)this.origin.LinkConfirm(t,this.elements[i])},a.prototype.remove=function(){var t;for(t=0;t<this.items.length;t+=1)this.items[t].target.off(".liblink");for(t=0;t<this.elements.length;t+=1)this.elements[t].remove()},a.prototype.change=function(t){if(this.origin.LinkIsEmitting)return!1;this.origin.LinkIsEmitting=!0;var i,e=Array.prototype.slice.call(arguments,1);for(e.unshift(t),i=0;i<this.items.length;i+=1)this.items[i].set.apply(this.items[i],e);this.origin.LinkIsEmitting=!1},t.fn.Link=function(i){var e=this;if(i===!1)return e.each(function(){this.linkAPI&&(t.map(this.linkAPI,function(t){t.remove()}),delete this.linkAPI)});if(void 0===i)i=0;else if("string"!=typeof i)throw new Error("Flag must be string.");return{to:function(t,n,s){return e.each(function(){l.call(this,i,t,n,s)})}}}}(window.jQuery||window.Zepto);